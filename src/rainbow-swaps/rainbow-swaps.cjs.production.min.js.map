{"version":3,"file":"rainbow-swaps.cjs.production.min.js","sources":["../src/types/index.ts","../node_modules/regenerator-runtime/runtime.js","../src/utils/constants.ts","../src/weth.ts","../src/quotes.ts","../src/utils/permit.ts"],"sourcesContent":["import { BigNumberish } from '@ethersproject/bignumber';\n\nexport enum ChainId {\n  mainnet = 1,\n  ropsten = 3,\n  kovan = 42,\n  goerli = 5,\n  rinkeby = 4,\n  optimism = 10,\n  polygon = 137,\n  arbitrum = 42161,\n}\n\nexport enum Source {\n  Aggregator0x = '0x',\n  Aggregotor1inch = '1inch',\n}\n\nexport type EthereumAddress = string;\n\nexport interface QuoteParams {\n  source?: Source;\n  chainId: number;\n  fromAddress: EthereumAddress;\n  sellTokenAddress: EthereumAddress;\n  buyTokenAddress: EthereumAddress;\n  sellAmount?: BigNumberish;\n  buyAmount?: BigNumberish;\n  slippage: number;\n  destReceiver?: EthereumAddress;\n}\n\nexport interface ProtocolShare {\n  name: string;\n  part: number;\n}\n\nexport interface Quote {\n  source?: Source;\n  from: EthereumAddress;\n  to?: EthereumAddress;\n  data?: string;\n  value?: BigNumberish;\n  sellAmount: BigNumberish;\n  sellAmountMinusFees: BigNumberish;\n  sellTokenAddress: EthereumAddress;\n  buyTokenAddress: EthereumAddress;\n  buyAmount: BigNumberish;\n  fee: BigNumberish;\n  feePercentageBasisPoints: number;\n  protocols?: ProtocolShare[];\n  inputTokenDecimals?: number;\n  outputTokenDecimals?: number;\n}\n\nexport interface TransactionOptions {\n  gasLimit?: string;\n  maxFeePerGas?: string;\n  maxPriorityFeePerGas?: string;\n  nonce?: string;\n  value?: number | BigNumberish;\n  from?: EthereumAddress;\n}\n\nexport interface QuoteExecutionDetails {\n  method: any;\n  methodArgs: (string | number | BigNumberish | EthereumAddress | undefined)[];\n  params: TransactionOptions;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { ChainId, EthereumAddress } from '../types';\nexport const ETH_ADDRESS = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE';\nexport const API_BASE_URL = 'https://swap-aggregator.api.p.rainbow.me';\nexport const RAINBOW_ROUTER_CONTRACT_ADDRESS =\n  '0x8364b06ebf273039ca452b1f86895f7082546245';\n\nexport type MultiChainAsset = {\n  [key: string]: EthereumAddress;\n};\n\nexport const WETH: MultiChainAsset = {\n  [`${ChainId.mainnet}`]: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n};\nexport const DAI_ADDRESS = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC_ADDRESS = '0x111111111117dc0aa78b770fa6a738034120c302';\nexport const TORN_ADDRESS = '0x77777feddddffc19ff86db637967013e6c6a116c';\nexport const WNXM_ADDRESS = '0x0d438f3b5175bebc262bf23753c1e53d03432bde';\nexport const VSP_ADDRESS = '0x1b40183efb4dd766f11bda7a7c3ad8982e998421';\nexport const MAX_INT = BigNumber.from('2').pow('256').sub('1').toString();\nexport const PERMIT_EXPIRATION_TS = 3600;\n\nexport type PermitSupportedTokenList = {\n  [key: string]: boolean;\n};\n\nexport const ALLOWS_PERMIT: PermitSupportedTokenList = {\n  // wNXM\n  '0x0d438f3b5175bebc262bf23753c1e53d03432bde': true,\n\n  // INCH\n  '0x111111111117dc0aa78b770fa6a738034120c302': true,\n\n  // VSP\n  '0x1b40183efb4dd766f11bda7a7c3ad8982e998421': true,\n\n  // UNI\n  '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984': true,\n\n  // RAD\n  '0x31c8eacbffdd875c74b94b077895bd78cf1e64a3': true,\n\n  // DAI\n  '0x6b175474e89094c44da98b954eedeac495271d0f': true,\n\n  // LQTY\n  '0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d': true,\n\n  // TORN\n  '0x77777feddddffc19ff86db637967013e6c6a116c': true,\n\n  // AAVE\n  '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9': true,\n\n  // DFX\n  '0x888888435fde8e7d4c54cab67f206e4199454c60': true,\n\n  // OPIUM\n  '0x888888888889c00c67689029d7856aac1065ec11': true,\n\n  // MIST\n  '0x88acdd2a6425c3faae4bc9650fd7e27e0bebb7ab': true,\n\n  // FEI\n  '0x956f47f50a910163d8bf957cf5846d573e7f87ca': true,\n\n  // USDC\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48': true,\n\n  // BAL\n  '0xba100000625a3754423978a60c9317c58a424e3d': true,\n\n  // TRIBE\n  '0xc7283b66eb1eb5fb86327f08e1b5816b0720212b': true,\n};\n","import { BigNumberish } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport { Transaction } from '@ethersproject/transactions';\nimport { Wallet } from '@ethersproject/wallet';\nimport { default as WethAbi } from './abi/Weth.json';\nimport { WETH } from './utils/constants';\nimport { ChainId } from '.';\n\n/**\n * Function to wrap a specific amount of ether for the specified wallet\n * (MAINNET ONLY!)\n * @param {BigNumberish} amount\n * @param {Wallet} wallet\n * @returns {Promise<Transaction>}\n */\nexport const wrapEth = async (\n  amount: BigNumberish,\n  wallet: Wallet\n): Promise<Transaction> => {\n  const instance = new Contract(\n    WETH[ChainId.mainnet],\n    JSON.stringify(WethAbi),\n    wallet\n  );\n\n  return instance.deposit({\n    value: amount,\n  });\n};\n\n/**\n * Function to unwrap a specific amount of ether for the specified wallet\n * (MAINNET ONLY!)\n * @param {BigNumberish} amount\n * @param {Wallet} wallet\n * @returns {Promise<Transaction>}\n */\nexport const unwrapWeth = async (\n  amount: BigNumberish,\n  wallet: Wallet\n): Promise<Transaction> => {\n  const instance = new Contract(\n    WETH[ChainId.mainnet],\n    JSON.stringify(WethAbi),\n    wallet\n  );\n\n  return instance.withdraw(amount);\n};\n\n/**\n * Function that returns a pointer to the smart contract\n * function that wraps or unwraps, to be used by estimateGas calls\n * (MAINNET ONLY!)\n * @param {string} name\n * @param {StaticJsonRpcProvider} provider]\n * @returns {Promise<Transaction>}\n */\nexport const geWethMethod = (\n  name: string,\n  provider: StaticJsonRpcProvider\n): any => {\n  const instance = new Contract(\n    WETH[ChainId.mainnet],\n    JSON.stringify(WethAbi),\n    provider\n  );\n  return instance.estimateGas[name];\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport { Transaction } from '@ethersproject/transactions';\nimport { Wallet } from '@ethersproject/wallet';\nimport RainbowRouterABI from './abi/RainbowRouter.json';\nimport {\n  ChainId,\n  Quote,\n  QuoteExecutionDetails,\n  QuoteParams,\n  TransactionOptions,\n} from './types';\nimport {\n  API_BASE_URL,\n  ETH_ADDRESS,\n  MAX_INT,\n  PERMIT_EXPIRATION_TS,\n  RAINBOW_ROUTER_CONTRACT_ADDRESS,\n  WETH,\n} from './utils/constants';\nimport { signPermit } from '.';\n\n/**\n * Function to get a quote from rainbow's swap aggregator backend\n *\n * @param {QuoteParams} params\n * @param {Source} params.source\n * @param {ChainId} params.chainId\n * @param {EthereumAddress} params.fromAddress\n * @param {EthereumAddress} params.sellTokenAddress\n * @param {EthereumAddress} params.buyTokenAddress\n * @param {BigNumberish} params.sellAmount\n * @param {BigNumberish} params.buyAmount\n * @param {number} params.slippage\n * @returns {Promise<Quote | null>}\n */\nexport const getQuote = async ({\n  source,\n  chainId = ChainId.mainnet,\n  fromAddress,\n  sellTokenAddress,\n  buyTokenAddress,\n  sellAmount,\n  buyAmount,\n  slippage,\n}: QuoteParams): Promise<Quote | null> => {\n  // When wrapping or unwrapping ETH, the quote is always 1:1\n  // so we don't need to call our backend.\n  // NOTE: we only support mainnet\n  if (\n    (sellTokenAddress === ETH_ADDRESS &&\n      buyTokenAddress === WETH[ChainId.mainnet]) ||\n    (sellTokenAddress === WETH[ChainId.mainnet] &&\n      buyTokenAddress === ETH_ADDRESS)\n  ) {\n    return {\n      buyAmount: sellAmount || buyAmount,\n      buyTokenAddress,\n      fee: 0,\n      feePercentageBasisPoints: 0,\n      from: fromAddress,\n      inputTokenDecimals: 18,\n      outputTokenDecimals: 18,\n      sellAmount: sellAmount || buyAmount,\n      sellAmountMinusFees: sellAmount || buyAmount,\n      sellTokenAddress,\n    } as Quote;\n  }\n\n  let url = `${API_BASE_URL}/quote?chainId=${chainId}&fromAddress=${fromAddress}&buyToken=${buyTokenAddress}&sellToken=${sellTokenAddress}&slippage=${slippage}`;\n  if (source) {\n    url += `&source=${source}`;\n  }\n  if (sellAmount) {\n    url += `&sellAmount=${sellAmount}`;\n  } else if (buyAmount) {\n    url += `&buyAmount=${buyAmount}`;\n  }\n  if (isNaN(Number(sellAmount)) && isNaN(Number(buyAmount))) {\n    return null;\n  }\n\n  // When buying ETH, we need to tell the aggregator\n  // to return the funds to the contract if we need to take a fee\n  if (buyTokenAddress === ETH_ADDRESS) {\n    url += `&destReceiver=${RAINBOW_ROUTER_CONTRACT_ADDRESS}`;\n  }\n\n  const response = await fetch(url);\n  const quote = await response.json();\n  return quote as Quote;\n};\n\nconst calculateDeadline = async (wallet: Wallet) => {\n  const { timestamp } = await wallet.provider.getBlock('latest');\n  return timestamp + PERMIT_EXPIRATION_TS;\n};\n\n/**\n * Function that fills a quote onchain via rainbow's swap aggregator smart contract\n *\n * @param {Quote} quote\n * @param {TransactionOptions} transactionOptions\n * @param {Wallet} wallet\n * @param {boolean} permit\n * @param {number} ChainId\n * @returns {Promise<Transaction>}\n */\nexport const fillQuote = async (\n  quote: Quote,\n  transactionOptions: TransactionOptions,\n  wallet: Wallet,\n  permit: boolean,\n  chainId: ChainId\n): Promise<Transaction> => {\n  const instance = new Contract(\n    RAINBOW_ROUTER_CONTRACT_ADDRESS,\n    RainbowRouterABI,\n    wallet\n  );\n  let swapTx;\n\n  const {\n    sellTokenAddress,\n    buyTokenAddress,\n    to,\n    data,\n    fee,\n    value,\n    sellAmount,\n    feePercentageBasisPoints,\n  } = quote;\n\n  if (sellTokenAddress?.toLowerCase() === ETH_ADDRESS.toLowerCase()) {\n    swapTx = await instance.fillQuoteEthToToken(\n      buyTokenAddress,\n      to,\n      data,\n      fee,\n      {\n        ...transactionOptions,\n        value,\n      }\n    );\n  } else if (buyTokenAddress?.toLowerCase() === ETH_ADDRESS.toLowerCase()) {\n    if (permit) {\n      const deadline = await calculateDeadline(wallet);\n      const permitSignature = await signPermit(\n        wallet,\n        sellTokenAddress,\n        quote.from,\n        instance.address,\n        MAX_INT,\n        deadline,\n        chainId\n      );\n      swapTx = await instance.fillQuoteTokenToEthWithPermit(\n        sellTokenAddress,\n        to,\n        data,\n        sellAmount,\n        feePercentageBasisPoints,\n        permitSignature,\n        {\n          ...transactionOptions,\n          value,\n        }\n      );\n    } else {\n      swapTx = await instance.fillQuoteTokenToEth(\n        sellTokenAddress,\n        to,\n        data,\n        sellAmount,\n        feePercentageBasisPoints,\n        {\n          ...transactionOptions,\n          value,\n        }\n      );\n    }\n  } else {\n    if (permit) {\n      const deadline = await calculateDeadline(wallet);\n      const permitSignature = await signPermit(\n        wallet,\n        sellTokenAddress,\n        quote.from,\n        instance.address,\n        MAX_INT,\n        deadline,\n        chainId\n      );\n      swapTx = await instance.fillQuoteTokenToTokenWithPermit(\n        sellTokenAddress,\n        buyTokenAddress,\n        to,\n        data,\n        sellAmount,\n        fee,\n        permitSignature,\n        {\n          ...transactionOptions,\n          value,\n        }\n      );\n    } else {\n      swapTx = await instance.fillQuoteTokenToToken(\n        sellTokenAddress,\n        buyTokenAddress,\n        to,\n        data,\n        sellAmount,\n        fee,\n        {\n          ...transactionOptions,\n          value,\n        }\n      );\n    }\n  }\n  return swapTx;\n};\n\nexport const getQuoteExecutionDetails = (\n  quote: Quote,\n  transactionOptions: TransactionOptions,\n  provider: StaticJsonRpcProvider\n): QuoteExecutionDetails => {\n  const instance = new Contract(\n    RAINBOW_ROUTER_CONTRACT_ADDRESS,\n    RainbowRouterABI,\n    provider\n  );\n\n  const {\n    sellTokenAddress,\n    buyTokenAddress,\n    to,\n    data,\n    fee,\n    value,\n    sellAmount,\n    feePercentageBasisPoints,\n  } = quote;\n\n  if (sellTokenAddress?.toLowerCase() === ETH_ADDRESS.toLowerCase()) {\n    return {\n      method: instance.estimateGas['fillQuoteEthToToken'],\n      methodArgs: [buyTokenAddress, to, data, fee],\n      params: {\n        ...transactionOptions,\n        value,\n      },\n    };\n  } else if (buyTokenAddress?.toLowerCase() === ETH_ADDRESS.toLowerCase()) {\n    return {\n      method: instance.estimateGas['fillQuoteTokenToEth'],\n      methodArgs: [\n        sellTokenAddress,\n        to,\n        data,\n        sellAmount,\n        feePercentageBasisPoints,\n      ],\n      params: {\n        ...transactionOptions,\n        value,\n      },\n    };\n  } else {\n    return {\n      method: instance.estimateGas['fillQuoteTokenToToken'],\n      methodArgs: [\n        sellTokenAddress,\n        buyTokenAddress,\n        to,\n        data,\n        sellAmount,\n        fee,\n      ],\n      params: {\n        ...transactionOptions,\n        value,\n      },\n    };\n  }\n};\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { splitSignature } from '@ethersproject/bytes';\nimport { Contract } from '@ethersproject/contracts';\nimport { Wallet } from '@ethersproject/wallet';\nimport {\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataUtils,\n} from '@metamask/eth-sig-util';\nimport { addHexPrefix, toBuffer } from 'ethereumjs-util';\nimport { DAI_ADDRESS, TORN_ADDRESS, VSP_ADDRESS, WNXM_ADDRESS } from '..';\nimport DAIAbi from '../abi/DAI.json';\nimport IERC2612Abi from '../abi/IERC2612.json';\nimport { ChainId, EthereumAddress } from '../types';\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n];\n\nexport interface MessageParam {\n  nonce: number;\n  spender: EthereumAddress;\n  holder?: EthereumAddress;\n  allowed?: boolean;\n  expiry?: number;\n  value?: BigNumberish;\n  deadline?: number;\n  owner?: EthereumAddress;\n}\n\nexport interface DomainParam {\n  chainId: ChainId;\n  name: string;\n  verifyingContract: EthereumAddress;\n  version?: string;\n}\n\nconst getDomainSeparator = async (\n  name: string,\n  version: string,\n  chainId: ChainId,\n  verifyingContract: EthereumAddress\n) => {\n  return (\n    '0x' +\n    TypedDataUtils.hashStruct(\n      'EIP712Domain',\n      { chainId, name, verifyingContract, version },\n      { EIP712Domain: EIP712_DOMAIN_TYPE },\n      SignTypedDataVersion.V4\n    ).toString('hex')\n  );\n};\n\nconst getPermitVersion = async (\n  token: { version: () => any; DOMAIN_SEPARATOR: () => any; address: string },\n  name: string,\n  chainId: ChainId,\n  verifyingContract: EthereumAddress\n) => {\n  try {\n    const version = await token.version();\n    return version;\n  } catch (e) {\n    const version = '1';\n    try {\n      const domainSeparator = await token.DOMAIN_SEPARATOR();\n      const domainSeparatorValidation = await getDomainSeparator(\n        name,\n        version,\n        chainId,\n        verifyingContract\n      );\n\n      if (domainSeparator === domainSeparatorValidation) {\n        return version;\n      }\n    } catch (_) {\n      if (\n        [TORN_ADDRESS, WNXM_ADDRESS, VSP_ADDRESS]\n          .map((t) => t.toLowerCase())\n          .indexOf(token.address.toLowerCase()) !== -1\n      ) {\n        return '1';\n      }\n      return null;\n    }\n    return null;\n  }\n};\n\nconst getNonces = async (token: Contract, owner: EthereumAddress) => {\n  try {\n    const nonce = await token.nonces(owner);\n    return nonce;\n  } catch (e) {\n    try {\n      const nonce = await token._nonces(owner);\n      return nonce;\n    } catch (e) {\n      return 0;\n    }\n  }\n};\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n];\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n];\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n];\n\nexport async function signPermit(\n  wallet: Wallet,\n  tokenAddress: EthereumAddress,\n  holder: EthereumAddress,\n  spender: EthereumAddress,\n  amount: string,\n  deadline: number,\n  chainId: number\n): Promise<any> {\n  const token = new Contract(\n    tokenAddress,\n    tokenAddress.toLowerCase() === DAI_ADDRESS ? DAIAbi : IERC2612Abi,\n    wallet\n  );\n  const isPermitAllowedType =\n    token.address.toLowerCase() === DAI_ADDRESS.toLowerCase();\n\n  const name = await token.name();\n  const [nonce, version] = await Promise.all([\n    getNonces(token, holder),\n    getPermitVersion(token as any, name, chainId, token.address),\n  ]);\n\n  const message: MessageParam = {\n    nonce: Number(nonce.toString()),\n    spender,\n  };\n\n  if (isPermitAllowedType) {\n    message.holder = holder;\n    message.allowed = true;\n    message.expiry = Number(deadline.toString());\n  } else {\n    message.value = BigNumber.from(amount).toHexString();\n    message.deadline = Number(deadline.toString());\n    message.owner = holder;\n  }\n\n  const domain: DomainParam = {\n    chainId,\n    name,\n    verifyingContract: token.address,\n  };\n  if (version !== null) {\n    domain.version = version;\n  }\n\n  const types = {\n    EIP712Domain:\n      version !== null ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n    Permit: isPermitAllowedType ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n  };\n\n  const data = {\n    domain,\n    message,\n    primaryType: 'Permit',\n    types,\n  };\n\n  const privateKeyBuffer = toBuffer(addHexPrefix(wallet.privateKey));\n\n  const signature = signTypedData({\n    data: data as any,\n    privateKey: privateKeyBuffer,\n    version: SignTypedDataVersion.V4,\n  });\n\n  const { v, r, s } = splitSignature(signature);\n\n  return {\n    deadline,\n    nonce,\n    r,\n    s,\n    v,\n    value: message.value || BigNumber.from('0').toHexString(),\n  };\n}\n"],"names":["ChainId","Source","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ETH_ADDRESS","API_BASE_URL","WETH","mainnet","DAI_ADDRESS","TORN_ADDRESS","WNXM_ADDRESS","VSP_ADDRESS","MAX_INT","BigNumber","from","pow","sub","toString","wrapEth","amount","wallet","instance","Contract","JSON","stringify","WethAbi","deposit","unwrapWeth","withdraw","getQuote","source","chainId","fromAddress","buyTokenAddress","sellAmount","buyAmount","slippage","sellTokenAddress","fee","feePercentageBasisPoints","inputTokenDecimals","outputTokenDecimals","sellAmountMinusFees","url","Number","fetch","response","json","calculateDeadline","provider","getBlock","timestamp","fillQuote","quote","transactionOptions","permit","RainbowRouterABI","to","data","toLowerCase","fillQuoteEthToToken","swapTx","deadline","signPermit","address","permitSignature","fillQuoteTokenToEthWithPermit","fillQuoteTokenToEth","fillQuoteTokenToTokenWithPermit","fillQuoteTokenToToken","EIP712_DOMAIN_TYPE","getDomainSeparator","version","verifyingContract","TypedDataUtils","hashStruct","EIP712Domain","SignTypedDataVersion","V4","getPermitVersion","token","DOMAIN_SEPARATOR","domainSeparator","map","t","indexOf","getNonces","owner","nonces","_nonces","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","tokenAddress","holder","spender","DAIAbi","IERC2612Abi","isPermitAllowedType","all","nonce","message","allowed","expiry","toHexString","domain","primaryType","types","Permit","privateKeyBuffer","toBuffer","addHexPrefix","privateKey","signature","signTypedData","splitSignature","r","s","v","estimateGas","methodArgs","params"],"mappings":"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"}